{"/home/travis/build/npmtest/node-npmtest-inflection/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-inflection/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_inflection */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-inflection/lib.npmtest_inflection.js":{"path":"/home/travis/build/npmtest/node-npmtest-inflection/lib.npmtest_inflection.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":55}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":61}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_inflection */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_inflection = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_inflection = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-inflection/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-inflection/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":54}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":68},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-inflection && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_inflection */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_inflection","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_inflection.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_inflection.rollup.js'] =","            local.assetsDict['/assets.npmtest_inflection.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_inflection.__dirname + '/lib.npmtest_inflection.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-inflection/node_modules/inflection/lib/inflection.js":{"path":"/home/travis/build/npmtest/node-npmtest-inflection/node_modules/inflection/lib/inflection.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":1},"b":{"1":[0,1],"2":[1,0],"3":[1,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":28}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":9},"end":{"line":18,"column":20}}},"3":{"name":"(anonymous_3)","line":590,"loc":{"start":{"line":590,"column":19},"end":{"line":590,"column":58}}},"4":{"name":"(anonymous_4)","line":632,"loc":{"start":{"line":632,"column":14},"end":{"line":632,"column":62}}},"5":{"name":"(anonymous_5)","line":669,"loc":{"start":{"line":669,"column":16},"end":{"line":669,"column":40}}},"6":{"name":"(anonymous_6)","line":691,"loc":{"start":{"line":691,"column":18},"end":{"line":691,"column":44}}},"7":{"name":"(anonymous_7)","line":718,"loc":{"start":{"line":718,"column":14},"end":{"line":718,"column":55}}},"8":{"name":"(anonymous_8)","line":748,"loc":{"start":{"line":748,"column":15},"end":{"line":748,"column":49}}},"9":{"name":"(anonymous_9)","line":795,"loc":{"start":{"line":795,"column":17},"end":{"line":795,"column":49}}},"10":{"name":"(anonymous_10)","line":827,"loc":{"start":{"line":827,"column":15},"end":{"line":827,"column":49}}},"11":{"name":"(anonymous_11)","line":854,"loc":{"start":{"line":854,"column":17},"end":{"line":854,"column":33}}},"12":{"name":"(anonymous_12)","line":875,"loc":{"start":{"line":875,"column":16},"end":{"line":875,"column":32}}},"13":{"name":"(anonymous_13)","line":894,"loc":{"start":{"line":894,"column":15},"end":{"line":894,"column":31}}},"14":{"name":"(anonymous_14)","line":935,"loc":{"start":{"line":935,"column":17},"end":{"line":935,"column":33}}},"15":{"name":"(anonymous_15)","line":955,"loc":{"start":{"line":955,"column":15},"end":{"line":955,"column":31}}},"16":{"name":"(anonymous_16)","line":976,"loc":{"start":{"line":976,"column":15},"end":{"line":976,"column":31}}},"17":{"name":"(anonymous_17)","line":1000,"loc":{"start":{"line":1000,"column":18},"end":{"line":1000,"column":48}}},"18":{"name":"(anonymous_18)","line":1021,"loc":{"start":{"line":1021,"column":17},"end":{"line":1021,"column":33}}},"19":{"name":"(anonymous_19)","line":1064,"loc":{"start":{"line":1064,"column":16},"end":{"line":1064,"column":37}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":1086,"column":4}},"2":{"start":{"line":11,"column":2},"end":{"line":17,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":25}},"4":{"start":{"line":13,"column":8},"end":{"line":17,"column":3}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":31}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":32}},"7":{"start":{"line":25,"column":2},"end":{"line":342,"column":4}},"8":{"start":{"line":349,"column":2},"end":{"line":417,"column":4}},"9":{"start":{"line":419,"column":2},"end":{"line":483,"column":4}},"10":{"start":{"line":489,"column":2},"end":{"line":554,"column":4}},"11":{"start":{"line":560,"column":2},"end":{"line":563,"column":4}},"12":{"start":{"line":569,"column":2},"end":{"line":569,"column":59}},"13":{"start":{"line":570,"column":2},"end":{"line":570,"column":49}},"14":{"start":{"line":571,"column":2},"end":{"line":571,"column":53}},"15":{"start":{"line":572,"column":2},"end":{"line":572,"column":55}},"16":{"start":{"line":573,"column":2},"end":{"line":573,"column":45}},"17":{"start":{"line":575,"column":2},"end":{"line":1078,"column":4}},"18":{"start":{"line":591,"column":6},"end":{"line":609,"column":7}},"19":{"start":{"line":592,"column":8},"end":{"line":592,"column":23}},"20":{"start":{"line":594,"column":8},"end":{"line":594,"column":74}},"21":{"start":{"line":596,"column":8},"end":{"line":608,"column":9}},"22":{"start":{"line":597,"column":10},"end":{"line":597,"column":20}},"23":{"start":{"line":598,"column":10},"end":{"line":598,"column":31}},"24":{"start":{"line":600,"column":10},"end":{"line":607,"column":11}},"25":{"start":{"line":601,"column":12},"end":{"line":606,"column":13}},"26":{"start":{"line":602,"column":14},"end":{"line":604,"column":15}},"27":{"start":{"line":603,"column":16},"end":{"line":603,"column":69}},"28":{"start":{"line":605,"column":14},"end":{"line":605,"column":20}},"29":{"start":{"line":611,"column":6},"end":{"line":611,"column":17}},"30":{"start":{"line":633,"column":6},"end":{"line":635,"column":7}},"31":{"start":{"line":634,"column":8},"end":{"line":634,"column":24}},"32":{"start":{"line":637,"column":6},"end":{"line":637,"column":21}},"33":{"start":{"line":638,"column":6},"end":{"line":638,"column":29}},"34":{"start":{"line":639,"column":6},"end":{"line":639,"column":29}},"35":{"start":{"line":641,"column":6},"end":{"line":646,"column":7}},"36":{"start":{"line":642,"column":8},"end":{"line":645,"column":9}},"37":{"start":{"line":643,"column":10},"end":{"line":643,"column":20}},"38":{"start":{"line":644,"column":10},"end":{"line":644,"column":16}},"39":{"start":{"line":648,"column":6},"end":{"line":648,"column":19}},"40":{"start":{"line":670,"column":6},"end":{"line":670,"column":84}},"41":{"start":{"line":692,"column":6},"end":{"line":692,"column":88}},"42":{"start":{"line":719,"column":6},"end":{"line":719,"column":36}},"43":{"start":{"line":721,"column":6},"end":{"line":721,"column":37}},"44":{"start":{"line":721,"column":26},"end":{"line":721,"column":37}},"45":{"start":{"line":723,"column":6},"end":{"line":727,"column":7}},"46":{"start":{"line":724,"column":8},"end":{"line":724,"column":86}},"47":{"start":{"line":726,"column":8},"end":{"line":726,"column":90}},"48":{"start":{"line":749,"column":6},"end":{"line":749,"column":38}},"49":{"start":{"line":750,"column":6},"end":{"line":750,"column":23}},"50":{"start":{"line":751,"column":6},"end":{"line":751,"column":37}},"51":{"start":{"line":752,"column":6},"end":{"line":752,"column":39}},"52":{"start":{"line":754,"column":6},"end":{"line":771,"column":7}},"53":{"start":{"line":755,"column":8},"end":{"line":755,"column":45}},"54":{"start":{"line":756,"column":8},"end":{"line":756,"column":20}},"55":{"start":{"line":757,"column":8},"end":{"line":757,"column":33}},"56":{"start":{"line":759,"column":8},"end":{"line":768,"column":9}},"57":{"start":{"line":760,"column":10},"end":{"line":762,"column":11}},"58":{"start":{"line":761,"column":12},"end":{"line":761,"column":54}},"59":{"start":{"line":764,"column":10},"end":{"line":764,"column":43}},"60":{"start":{"line":765,"column":10},"end":{"line":766,"column":56}},"61":{"start":{"line":767,"column":10},"end":{"line":767,"column":61}},"62":{"start":{"line":770,"column":8},"end":{"line":770,"column":43}},"63":{"start":{"line":773,"column":6},"end":{"line":773,"column":35}},"64":{"start":{"line":796,"column":6},"end":{"line":796,"column":66}},"65":{"start":{"line":796,"column":55},"end":{"line":796,"column":66}},"66":{"start":{"line":798,"column":6},"end":{"line":798,"column":39}},"67":{"start":{"line":799,"column":6},"end":{"line":799,"column":23}},"68":{"start":{"line":800,"column":6},"end":{"line":800,"column":37}},"69":{"start":{"line":802,"column":6},"end":{"line":805,"column":7}},"70":{"start":{"line":803,"column":8},"end":{"line":803,"column":66}},"71":{"start":{"line":804,"column":8},"end":{"line":804,"column":69}},"72":{"start":{"line":807,"column":6},"end":{"line":807,"column":48}},"73":{"start":{"line":828,"column":6},"end":{"line":828,"column":30}},"74":{"start":{"line":829,"column":6},"end":{"line":829,"column":41}},"75":{"start":{"line":830,"column":6},"end":{"line":830,"column":41}},"76":{"start":{"line":832,"column":6},"end":{"line":834,"column":7}},"77":{"start":{"line":833,"column":8},"end":{"line":833,"column":42}},"78":{"start":{"line":836,"column":6},"end":{"line":836,"column":17}},"79":{"start":{"line":855,"column":6},"end":{"line":855,"column":30}},"80":{"start":{"line":857,"column":6},"end":{"line":857,"column":70}},"81":{"start":{"line":876,"column":6},"end":{"line":876,"column":51}},"82":{"start":{"line":895,"column":6},"end":{"line":895,"column":63}},"83":{"start":{"line":896,"column":6},"end":{"line":896,"column":37}},"84":{"start":{"line":897,"column":6},"end":{"line":897,"column":22}},"85":{"start":{"line":898,"column":6},"end":{"line":898,"column":35}},"86":{"start":{"line":899,"column":6},"end":{"line":899,"column":18}},"87":{"start":{"line":901,"column":6},"end":{"line":913,"column":7}},"88":{"start":{"line":902,"column":8},"end":{"line":902,"column":38}},"89":{"start":{"line":903,"column":8},"end":{"line":903,"column":14}},"90":{"start":{"line":904,"column":8},"end":{"line":904,"column":21}},"91":{"start":{"line":906,"column":8},"end":{"line":910,"column":9}},"92":{"start":{"line":907,"column":10},"end":{"line":909,"column":11}},"93":{"start":{"line":908,"column":12},"end":{"line":908,"column":51}},"94":{"start":{"line":912,"column":8},"end":{"line":912,"column":37}},"95":{"start":{"line":915,"column":6},"end":{"line":915,"column":32}},"96":{"start":{"line":916,"column":6},"end":{"line":916,"column":69}},"97":{"start":{"line":918,"column":6},"end":{"line":918,"column":17}},"98":{"start":{"line":936,"column":6},"end":{"line":936,"column":38}},"99":{"start":{"line":938,"column":6},"end":{"line":938,"column":43}},"100":{"start":{"line":956,"column":6},"end":{"line":956,"column":40}},"101":{"start":{"line":957,"column":6},"end":{"line":957,"column":39}},"102":{"start":{"line":959,"column":6},"end":{"line":959,"column":17}},"103":{"start":{"line":977,"column":6},"end":{"line":977,"column":38}},"104":{"start":{"line":978,"column":6},"end":{"line":978,"column":41}},"105":{"start":{"line":980,"column":6},"end":{"line":980,"column":17}},"106":{"start":{"line":1001,"column":6},"end":{"line":1001,"column":40}},"107":{"start":{"line":1002,"column":6},"end":{"line":1002,"column":87}},"108":{"start":{"line":1004,"column":6},"end":{"line":1004,"column":17}},"109":{"start":{"line":1022,"column":6},"end":{"line":1022,"column":37}},"110":{"start":{"line":1023,"column":6},"end":{"line":1023,"column":22}},"111":{"start":{"line":1024,"column":6},"end":{"line":1024,"column":35}},"112":{"start":{"line":1026,"column":6},"end":{"line":1046,"column":7}},"113":{"start":{"line":1027,"column":8},"end":{"line":1027,"column":45}},"114":{"start":{"line":1029,"column":8},"end":{"line":1045,"column":9}},"115":{"start":{"line":1030,"column":10},"end":{"line":1030,"column":70}},"116":{"start":{"line":1031,"column":10},"end":{"line":1031,"column":70}},"117":{"start":{"line":1032,"column":10},"end":{"line":1032,"column":25}},"118":{"start":{"line":1034,"column":10},"end":{"line":1042,"column":11}},"119":{"start":{"line":1035,"column":12},"end":{"line":1041,"column":13}},"120":{"start":{"line":1036,"column":14},"end":{"line":1036,"column":25}},"121":{"start":{"line":1037,"column":18},"end":{"line":1041,"column":13}},"122":{"start":{"line":1038,"column":14},"end":{"line":1038,"column":25}},"123":{"start":{"line":1039,"column":18},"end":{"line":1041,"column":13}},"124":{"start":{"line":1040,"column":14},"end":{"line":1040,"column":25}},"125":{"start":{"line":1044,"column":10},"end":{"line":1044,"column":30}},"126":{"start":{"line":1048,"column":6},"end":{"line":1048,"column":33}},"127":{"start":{"line":1065,"column":6},"end":{"line":1065,"column":16}},"128":{"start":{"line":1066,"column":6},"end":{"line":1066,"column":25}},"129":{"start":{"line":1068,"column":6},"end":{"line":1074,"column":7}},"130":{"start":{"line":1069,"column":8},"end":{"line":1069,"column":30}},"131":{"start":{"line":1071,"column":8},"end":{"line":1073,"column":9}},"132":{"start":{"line":1072,"column":10},"end":{"line":1072,"column":43}},"133":{"start":{"line":1076,"column":6},"end":{"line":1076,"column":17}},"134":{"start":{"line":1083,"column":2},"end":{"line":1083,"column":31}},"135":{"start":{"line":1085,"column":2},"end":{"line":1085,"column":19}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":34}},{"start":{"line":11,"column":38},"end":{"line":11,"column":48}}]},"3":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":8}},{"start":{"line":13,"column":8},"end":{"line":13,"column":8}}]},"4":{"line":591,"type":"if","locations":[{"start":{"line":591,"column":6},"end":{"line":591,"column":6}},{"start":{"line":591,"column":6},"end":{"line":591,"column":6}}]},"5":{"line":596,"type":"if","locations":[{"start":{"line":596,"column":8},"end":{"line":596,"column":8}},{"start":{"line":596,"column":8},"end":{"line":596,"column":8}}]},"6":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":12},"end":{"line":601,"column":12}},{"start":{"line":601,"column":12},"end":{"line":601,"column":12}}]},"7":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":14},"end":{"line":602,"column":14}},{"start":{"line":602,"column":14},"end":{"line":602,"column":14}}]},"8":{"line":633,"type":"if","locations":[{"start":{"line":633,"column":6},"end":{"line":633,"column":6}},{"start":{"line":633,"column":6},"end":{"line":633,"column":6}}]},"9":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":8},"end":{"line":642,"column":8}},{"start":{"line":642,"column":8},"end":{"line":642,"column":8}}]},"10":{"line":642,"type":"binary-expr","locations":[{"start":{"line":642,"column":12},"end":{"line":642,"column":30}},{"start":{"line":642,"column":34},"end":{"line":642,"column":46}},{"start":{"line":642,"column":50},"end":{"line":642,"column":80}}]},"11":{"line":721,"type":"if","locations":[{"start":{"line":721,"column":6},"end":{"line":721,"column":6}},{"start":{"line":721,"column":6},"end":{"line":721,"column":6}}]},"12":{"line":723,"type":"if","locations":[{"start":{"line":723,"column":6},"end":{"line":723,"column":6}},{"start":{"line":723,"column":6},"end":{"line":723,"column":6}}]},"13":{"line":723,"type":"binary-expr","locations":[{"start":{"line":723,"column":10},"end":{"line":723,"column":21}},{"start":{"line":723,"column":25},"end":{"line":723,"column":34}}]},"14":{"line":760,"type":"if","locations":[{"start":{"line":760,"column":10},"end":{"line":760,"column":10}},{"start":{"line":760,"column":10},"end":{"line":760,"column":10}}]},"15":{"line":765,"type":"cond-expr","locations":[{"start":{"line":766,"column":14},"end":{"line":766,"column":33}},{"start":{"line":766,"column":36},"end":{"line":766,"column":55}}]},"16":{"line":765,"type":"binary-expr","locations":[{"start":{"line":765,"column":18},"end":{"line":765,"column":34}},{"start":{"line":765,"column":38},"end":{"line":765,"column":45}},{"start":{"line":765,"column":49},"end":{"line":765,"column":56}}]},"17":{"line":796,"type":"if","locations":[{"start":{"line":796,"column":6},"end":{"line":796,"column":6}},{"start":{"line":796,"column":6},"end":{"line":796,"column":6}}]},"18":{"line":796,"type":"binary-expr","locations":[{"start":{"line":796,"column":10},"end":{"line":796,"column":24}},{"start":{"line":796,"column":28},"end":{"line":796,"column":53}}]},"19":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":6},"end":{"line":832,"column":6}},{"start":{"line":832,"column":6},"end":{"line":832,"column":6}}]},"20":{"line":907,"type":"if","locations":[{"start":{"line":907,"column":10},"end":{"line":907,"column":10}},{"start":{"line":907,"column":10},"end":{"line":907,"column":10}}]},"21":{"line":1002,"type":"cond-expr","locations":[{"start":{"line":1002,"column":64},"end":{"line":1002,"column":66}},{"start":{"line":1002,"column":73},"end":{"line":1002,"column":76}}]},"22":{"line":1029,"type":"if","locations":[{"start":{"line":1029,"column":8},"end":{"line":1029,"column":8}},{"start":{"line":1029,"column":8},"end":{"line":1029,"column":8}}]},"23":{"line":1034,"type":"if","locations":[{"start":{"line":1034,"column":10},"end":{"line":1034,"column":10}},{"start":{"line":1034,"column":10},"end":{"line":1034,"column":10}}]},"24":{"line":1034,"type":"binary-expr","locations":[{"start":{"line":1034,"column":14},"end":{"line":1034,"column":25}},{"start":{"line":1034,"column":29},"end":{"line":1034,"column":40}},{"start":{"line":1034,"column":44},"end":{"line":1034,"column":55}}]},"25":{"line":1035,"type":"if","locations":[{"start":{"line":1035,"column":12},"end":{"line":1035,"column":12}},{"start":{"line":1035,"column":12},"end":{"line":1035,"column":12}}]},"26":{"line":1037,"type":"if","locations":[{"start":{"line":1037,"column":18},"end":{"line":1037,"column":18}},{"start":{"line":1037,"column":18},"end":{"line":1037,"column":18}}]},"27":{"line":1039,"type":"if","locations":[{"start":{"line":1039,"column":18},"end":{"line":1039,"column":18}},{"start":{"line":1039,"column":18},"end":{"line":1039,"column":18}}]},"28":{"line":1071,"type":"if","locations":[{"start":{"line":1071,"column":8},"end":{"line":1071,"column":8}},{"start":{"line":1071,"column":8},"end":{"line":1071,"column":8}}]}},"code":["/*!"," * inflection"," * Copyright(c) 2011 Ben Lin <ben@dreamerslab.com>"," * MIT Licensed"," *"," * @fileoverview"," * A port of inflection-js to node.js module."," */","","( function ( root, factory ){","  if( typeof define === 'function' && define.amd ){","    define([], factory );","  }else if( typeof exports === 'object' ){","    module.exports = factory();","  }else{","    root.inflection = factory();","  }","}( this, function (){","","  /**","   * @description This is a list of nouns that use the same form for both singular and plural.","   *              This list should remain entirely in lower case to correctly match Strings.","   * @private","   */","  var uncountable_words = [","    // 'access',","    'accommodation',","    'adulthood',","    'advertising',","    'advice',","    'aggression',","    'aid',","    'air',","    'aircraft',","    'alcohol',","    'anger',","    'applause',","    'arithmetic',","    // 'art',","    'assistance',","    'athletics',","    // 'attention',","","    'bacon',","    'baggage',","    // 'ballet',","    // 'beauty',","    'beef',","    // 'beer',","    // 'behavior',","    'biology',","    // 'billiards',","    'blood',","    'botany',","    // 'bowels',","    'bread',","    // 'business',","    'butter',","","    'carbon',","    'cardboard',","    'cash',","    'chalk',","    'chaos',","    'chess',","    'crossroads',","    'countryside',","","    // 'damage',","    'dancing',","    // 'danger',","    'deer',","    // 'delight',","    // 'dessert',","    'dignity',","    'dirt',","    // 'distribution',","    'dust',","","    'economics',","    'education',","    'electricity',","    // 'employment',","    // 'energy',","    'engineering',","    'enjoyment',","    // 'entertainment',","    'envy',","    'equipment',","    'ethics',","    'evidence',","    'evolution',","","    // 'failure',","    // 'faith',","    'fame',","    'fiction',","    // 'fish',","    'flour',","    'flu',","    'food',","    // 'freedom',","    // 'fruit',","    'fuel',","    'fun',","    // 'funeral',","    'furniture',","","    'gallows',","    'garbage',","    'garlic',","    // 'gas',","    'genetics',","    // 'glass',","    'gold',","    'golf',","    'gossip',","    'grammar',","    // 'grass',","    'gratitude',","    'grief',","    // 'ground',","    'guilt',","    'gymnastics',","","    // 'hair',","    'happiness',","    'hardware',","    'harm',","    'hate',","    'hatred',","    'health',","    'heat',","    // 'height',","    'help',","    'homework',","    'honesty',","    'honey',","    'hospitality',","    'housework',","    'humour',","    'hunger',","    'hydrogen',","","    'ice',","    'importance',","    'inflation',","    'information',","    // 'injustice',","    'innocence',","    // 'intelligence',","    'iron',","    'irony',","","    'jam',","    // 'jealousy',","    // 'jelly',","    'jewelry',","    // 'joy',","    'judo',","    // 'juice',","    // 'justice',","","    'karate',","    // 'kindness',","    'knowledge',","","    // 'labour',","    'lack',","    // 'land',","    'laughter',","    'lava',","    'leather',","    'leisure',","    'lightning',","    'linguine',","    'linguini',","    'linguistics',","    'literature',","    'litter',","    'livestock',","    'logic',","    'loneliness',","    // 'love',","    'luck',","    'luggage',","","    'macaroni',","    'machinery',","    'magic',","    // 'mail',","    'management',","    'mankind',","    'marble',","    'mathematics',","    'mayonnaise',","    'measles',","    // 'meat',","    // 'metal',","    'methane',","    'milk',","    'minus',","    'money',","    // 'moose',","    'mud',","    'music',","    'mumps',","","    'nature',","    'news',","    'nitrogen',","    'nonsense',","    'nurture',","    'nutrition',","","    'obedience',","    'obesity',","    // 'oil',","    'oxygen',","","    // 'paper',","    // 'passion',","    'pasta',","    'patience',","    // 'permission',","    'physics',","    'poetry',","    'pollution',","    'poverty',","    // 'power',","    'pride',","    // 'production',","    // 'progress',","    // 'pronunciation',","    'psychology',","    'publicity',","    'punctuation',","","    // 'quality',","    // 'quantity',","    'quartz',","","    'racism',","    // 'rain',","    // 'recreation',","    'relaxation',","    'reliability',","    'research',","    'respect',","    'revenge',","    'rice',","    'rubbish',","    'rum',","","    'safety',","    // 'salad',","    // 'salt',","    // 'sand',","    // 'satire',","    'scenery',","    'seafood',","    'seaside',","    'series',","    'shame',","    'sheep',","    'shopping',","    // 'silence',","    'sleep',","    // 'slang'","    'smoke',","    'smoking',","    'snow',","    'soap',","    'software',","    'soil',","    // 'sorrow',","    // 'soup',","    'spaghetti',","    // 'speed',","    'species',","    // 'spelling',","    // 'sport',","    'steam',","    // 'strength',","    'stuff',","    'stupidity',","    // 'success',","    // 'sugar',","    'sunshine',","    'symmetry',","","    // 'tea',","    'tennis',","    'thirst',","    'thunder',","    'timber',","    // 'time',","    // 'toast',","    // 'tolerance',","    // 'trade',","    'traffic',","    'transportation',","    // 'travel',","    'trust',","","    // 'understanding',","    'underwear',","    'unemployment',","    'unity',","    // 'usage',","","    'validity',","    'veal',","    'vegetation',","    'vegetarianism',","    'vengeance',","    'violence',","    // 'vision',","    'vitality',","","    'warmth',","    // 'water',","    'wealth',","    'weather',","    // 'weight',","    'welfare',","    'wheat',","    // 'whiskey',","    // 'width',","    'wildlife',","    // 'wine',","    'wisdom',","    // 'wood',","    // 'wool',","    // 'work',","","    // 'yeast',","    'yoga',","","    'zinc',","    'zoology'","  ];","","  /**","   * @description These rules translate from the singular form of a noun to its plural form.","   * @private","   */","","  var regex = {","    plural : {","      men       : new RegExp( '^(m|wom)en$'                    , 'gi' ),","      people    : new RegExp( '(pe)ople$'                      , 'gi' ),","      children  : new RegExp( '(child)ren$'                    , 'gi' ),","      tia       : new RegExp( '([ti])a$'                       , 'gi' ),","      analyses  : new RegExp( '((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$','gi' ),","      hives     : new RegExp( '(hi|ti)ves$'                    , 'gi' ),","      curves    : new RegExp( '(curve)s$'                      , 'gi' ),","      lrves     : new RegExp( '([lr])ves$'                     , 'gi' ),","      aves      : new RegExp( '([a])ves$'                      , 'gi' ),","      foves     : new RegExp( '([^fo])ves$'                    , 'gi' ),","      movies    : new RegExp( '(m)ovies$'                      , 'gi' ),","      aeiouyies : new RegExp( '([^aeiouy]|qu)ies$'             , 'gi' ),","      series    : new RegExp( '(s)eries$'                      , 'gi' ),","      xes       : new RegExp( '(x|ch|ss|sh)es$'                , 'gi' ),","      mice      : new RegExp( '([m|l])ice$'                    , 'gi' ),","      buses     : new RegExp( '(bus)es$'                       , 'gi' ),","      oes       : new RegExp( '(o)es$'                         , 'gi' ),","      shoes     : new RegExp( '(shoe)s$'                       , 'gi' ),","      crises    : new RegExp( '(cris|ax|test)es$'              , 'gi' ),","      octopi    : new RegExp( '(octop|vir)i$'                  , 'gi' ),","      aliases   : new RegExp( '(alias|canvas|status|campus)es$', 'gi' ),","      summonses : new RegExp( '^(summons)es$'                  , 'gi' ),","      oxen      : new RegExp( '^(ox)en'                        , 'gi' ),","      matrices  : new RegExp( '(matr)ices$'                    , 'gi' ),","      vertices  : new RegExp( '(vert|ind)ices$'                , 'gi' ),","      feet      : new RegExp( '^feet$'                         , 'gi' ),","      teeth     : new RegExp( '^teeth$'                        , 'gi' ),","      geese     : new RegExp( '^geese$'                        , 'gi' ),","      quizzes   : new RegExp( '(quiz)zes$'                     , 'gi' ),","      whereases : new RegExp( '^(whereas)es$'                  , 'gi' ),","      criteria  : new RegExp( '^(criteri)a$'                   , 'gi' ),","      genera    : new RegExp( '^genera$'                       , 'gi' ),","      ss        : new RegExp( 'ss$'                            , 'gi' ),","      s         : new RegExp( 's$'                             , 'gi' )","    },","","    singular : {","      man       : new RegExp( '^(m|wom)an$'                  , 'gi' ),","      person    : new RegExp( '(pe)rson$'                    , 'gi' ),","      child     : new RegExp( '(child)$'                     , 'gi' ),","      ox        : new RegExp( '^(ox)$'                       , 'gi' ),","      axis      : new RegExp( '(ax|test)is$'                 , 'gi' ),","      octopus   : new RegExp( '(octop|vir)us$'               , 'gi' ),","      alias     : new RegExp( '(alias|status|canvas|campus)$', 'gi' ),","      summons   : new RegExp( '^(summons)$'                  , 'gi' ),","      bus       : new RegExp( '(bu)s$'                       , 'gi' ),","      buffalo   : new RegExp( '(buffal|tomat|potat)o$'       , 'gi' ),","      tium      : new RegExp( '([ti])um$'                    , 'gi' ),","      sis       : new RegExp( 'sis$'                         , 'gi' ),","      ffe       : new RegExp( '(?:([^f])fe|([lr])f)$'        , 'gi' ),","      hive      : new RegExp( '(hi|ti)ve$'                   , 'gi' ),","      aeiouyy   : new RegExp( '([^aeiouy]|qu)y$'             , 'gi' ),","      x         : new RegExp( '(x|ch|ss|sh)$'                , 'gi' ),","      matrix    : new RegExp( '(matr)ix$'                    , 'gi' ),","      vertex    : new RegExp( '(vert|ind)ex$'                , 'gi' ),","      mouse     : new RegExp( '([m|l])ouse$'                 , 'gi' ),","      foot      : new RegExp( '^foot$'                       , 'gi' ),","      tooth     : new RegExp( '^tooth$'                      , 'gi' ),","      goose     : new RegExp( '^goose$'                      , 'gi' ),","      quiz      : new RegExp( '(quiz)$'                      , 'gi' ),","      whereas   : new RegExp( '^(whereas)$'                  , 'gi' ),","      criterion : new RegExp( '^(criteri)on$'                , 'gi' ),","      genus     : new RegExp( '^genus$'                      , 'gi' ),","      s         : new RegExp( 's$'                           , 'gi' ),","      common    : new RegExp( '$'                            , 'gi' )","    }","  };","","  var plural_rules = [","","    // do not replace if its already a plural word","    [ regex.plural.men       ],","    [ regex.plural.people    ],","    [ regex.plural.children  ],","    [ regex.plural.tia       ],","    [ regex.plural.analyses  ],","    [ regex.plural.hives     ],","    [ regex.plural.curves    ],","    [ regex.plural.lrves     ],","    [ regex.plural.foves     ],","    [ regex.plural.aeiouyies ],","    [ regex.plural.series    ],","    [ regex.plural.movies    ],","    [ regex.plural.xes       ],","    [ regex.plural.mice      ],","    [ regex.plural.buses     ],","    [ regex.plural.oes       ],","    [ regex.plural.shoes     ],","    [ regex.plural.crises    ],","    [ regex.plural.octopi    ],","    [ regex.plural.aliases   ],","    [ regex.plural.summonses ],","    [ regex.plural.oxen      ],","    [ regex.plural.matrices  ],","    [ regex.plural.feet      ],","    [ regex.plural.teeth     ],","    [ regex.plural.geese     ],","    [ regex.plural.quizzes   ],","    [ regex.plural.whereases ],","    [ regex.plural.criteria  ],","    [ regex.plural.genera    ],","","    // original rule","    [ regex.singular.man      , '$1en' ],","    [ regex.singular.person   , '$1ople' ],","    [ regex.singular.child    , '$1ren' ],","    [ regex.singular.ox       , '$1en' ],","    [ regex.singular.axis     , '$1es' ],","    [ regex.singular.octopus  , '$1i' ],","    [ regex.singular.alias    , '$1es' ],","    [ regex.singular.summons  , '$1es' ],","    [ regex.singular.bus      , '$1ses' ],","    [ regex.singular.buffalo  , '$1oes' ],","    [ regex.singular.tium     , '$1a' ],","    [ regex.singular.sis      , 'ses' ],","    [ regex.singular.ffe      , '$1$2ves' ],","    [ regex.singular.hive     , '$1ves' ],","    [ regex.singular.aeiouyy  , '$1ies' ],","    [ regex.singular.matrix   , '$1ices' ],","    [ regex.singular.vertex   , '$1ices' ],","    [ regex.singular.x        , '$1es' ],","    [ regex.singular.mouse    , '$1ice' ],","    [ regex.singular.foot     , 'feet' ],","    [ regex.singular.tooth    , 'teeth' ],","    [ regex.singular.goose    , 'geese' ],","    [ regex.singular.quiz     , '$1zes' ],","    [ regex.singular.whereas  , '$1es' ],","    [ regex.singular.criterion, '$1a' ],","    [ regex.singular.genus    , 'genera' ],","","    [ regex.singular.s     , 's' ],","    [ regex.singular.common, 's' ]","  ];","","  /**","   * @description These rules translate from the plural form of a noun to its singular form.","   * @private","   */","  var singular_rules = [","","    // do not replace if its already a singular word","    [ regex.singular.man     ],","    [ regex.singular.person  ],","    [ regex.singular.child   ],","    [ regex.singular.ox      ],","    [ regex.singular.axis    ],","    [ regex.singular.octopus ],","    [ regex.singular.alias   ],","    [ regex.singular.summons ],","    [ regex.singular.bus     ],","    [ regex.singular.buffalo ],","    [ regex.singular.tium    ],","    [ regex.singular.sis     ],","    [ regex.singular.ffe     ],","    [ regex.singular.hive    ],","    [ regex.singular.aeiouyy ],","    [ regex.singular.x       ],","    [ regex.singular.matrix  ],","    [ regex.singular.mouse   ],","    [ regex.singular.foot    ],","    [ regex.singular.tooth   ],","    [ regex.singular.goose   ],","    [ regex.singular.quiz    ],","    [ regex.singular.whereas ],","    [ regex.singular.criterion ],","    [ regex.singular.genus ],","","    // original rule","    [ regex.plural.men      , '$1an' ],","    [ regex.plural.people   , '$1rson' ],","    [ regex.plural.children , '$1' ],","    [ regex.plural.genera   , 'genus'],","    [ regex.plural.criteria , '$1on'],","    [ regex.plural.tia      , '$1um' ],","    [ regex.plural.analyses , '$1$2sis' ],","    [ regex.plural.hives    , '$1ve' ],","    [ regex.plural.curves   , '$1' ],","    [ regex.plural.lrves    , '$1f' ],","    [ regex.plural.aves     , '$1ve' ],","    [ regex.plural.foves    , '$1fe' ],","    [ regex.plural.movies   , '$1ovie' ],","    [ regex.plural.aeiouyies, '$1y' ],","    [ regex.plural.series   , '$1eries' ],","    [ regex.plural.xes      , '$1' ],","    [ regex.plural.mice     , '$1ouse' ],","    [ regex.plural.buses    , '$1' ],","    [ regex.plural.oes      , '$1' ],","    [ regex.plural.shoes    , '$1' ],","    [ regex.plural.crises   , '$1is' ],","    [ regex.plural.octopi   , '$1us' ],","    [ regex.plural.aliases  , '$1' ],","    [ regex.plural.summonses, '$1' ],","    [ regex.plural.oxen     , '$1' ],","    [ regex.plural.matrices , '$1ix' ],","    [ regex.plural.vertices , '$1ex' ],","    [ regex.plural.feet     , 'foot' ],","    [ regex.plural.teeth    , 'tooth' ],","    [ regex.plural.geese    , 'goose' ],","    [ regex.plural.quizzes  , '$1' ],","    [ regex.plural.whereases, '$1' ],","","    [ regex.plural.ss, 'ss' ],","    [ regex.plural.s , '' ]","  ];","","  /**","   * @description This is a list of words that should not be capitalized for title case.","   * @private","   */","  var non_titlecased_words = [","    'and', 'or', 'nor', 'a', 'an', 'the', 'so', 'but', 'to', 'of', 'at','by',","    'from', 'into', 'on', 'onto', 'off', 'out', 'in', 'over', 'with', 'for'","  ];","","  /**","   * @description These are regular expressions used for converting between String formats.","   * @private","   */","  var id_suffix         = new RegExp( '(_ids|_id)$', 'g' );","  var underbar          = new RegExp( '_', 'g' );","  var space_or_underbar = new RegExp( '[\\ _]', 'g' );","  var uppercase         = new RegExp( '([A-Z])', 'g' );","  var underbar_prefix   = new RegExp( '^_' );","","  var inflector = {","","  /**","   * A helper method that applies rules based replacement to a String.","   * @private","   * @function","   * @param {String} str String to modify and return based on the passed rules.","   * @param {Array: [RegExp, String]} rules Regexp to match paired with String to use for replacement","   * @param {Array: [String]} skip Strings to skip if they match","   * @param {String} override String to return as though this method succeeded (used to conform to APIs)","   * @returns {String} Return passed String modified by passed rules.","   * @example","   *","   *     this._apply_rules( 'cows', singular_rules ); // === 'cow'","   */","    _apply_rules : function ( str, rules, skip, override ){","      if( override ){","        str = override;","      }else{","        var ignore = ( inflector.indexOf( skip, str.toLowerCase()) > -1 );","","        if( !ignore ){","          var i = 0;","          var j = rules.length;","","          for( ; i < j; i++ ){","            if( str.match( rules[ i ][ 0 ])){","              if( rules[ i ][ 1 ] !== undefined ){","                str = str.replace( rules[ i ][ 0 ], rules[ i ][ 1 ]);","              }","              break;","            }","          }","        }","      }","","      return str;","    },","","","","  /**","   * This lets us detect if an Array contains a given element.","   * @public","   * @function","   * @param {Array} arr The subject array.","   * @param {Object} item Object to locate in the Array.","   * @param {Number} from_index Starts checking from this position in the Array.(optional)","   * @param {Function} compare_func Function used to compare Array item vs passed item.(optional)","   * @returns {Number} Return index position in the Array of the passed item.","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.indexOf([ 'hi','there' ], 'guys' ); // === -1","   *     inflection.indexOf([ 'hi','there' ], 'hi' ); // === 0","   */","    indexOf : function ( arr, item, from_index, compare_func ){","      if( !from_index ){","        from_index = -1;","      }","","      var index = -1;","      var i     = from_index;","      var j     = arr.length;","","      for( ; i < j; i++ ){","        if( arr[ i ]  === item || compare_func && compare_func( arr[ i ], item )){","          index = i;","          break;","        }","      }","","      return index;","    },","","","","  /**","   * This function adds pluralization support to every String object.","   * @public","   * @function","   * @param {String} str The subject string.","   * @param {String} plural Overrides normal output with said String.(optional)","   * @returns {String} Singular English language nouns are returned in plural form.","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.pluralize( 'person' ); // === 'people'","   *     inflection.pluralize( 'octopus' ); // === 'octopi'","   *     inflection.pluralize( 'Hat' ); // === 'Hats'","   *     inflection.pluralize( 'person', 'guys' ); // === 'guys'","   */","    pluralize : function ( str, plural ){","      return inflector._apply_rules( str, plural_rules, uncountable_words, plural );","    },","","","","  /**","   * This function adds singularization support to every String object.","   * @public","   * @function","   * @param {String} str The subject string.","   * @param {String} singular Overrides normal output with said String.(optional)","   * @returns {String} Plural English language nouns are returned in singular form.","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.singularize( 'people' ); // === 'person'","   *     inflection.singularize( 'octopi' ); // === 'octopus'","   *     inflection.singularize( 'Hats' ); // === 'Hat'","   *     inflection.singularize( 'guys', 'person' ); // === 'person'","   */","    singularize : function ( str, singular ){","      return inflector._apply_rules( str, singular_rules, uncountable_words, singular );","    },","","","  /**","   * This function will pluralize or singularlize a String appropriately based on an integer value","   * @public","   * @function","   * @param {String} str The subject string.","   * @param {Number} count The number to base pluralization off of.","   * @param {String} singular Overrides normal output with said String.(optional)","   * @param {String} plural Overrides normal output with said String.(optional)","   * @returns {String} English language nouns are returned in the plural or singular form based on the count.","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.inflect( 'people' 1 ); // === 'person'","   *     inflection.inflect( 'octopi' 1 ); // === 'octopus'","   *     inflection.inflect( 'Hats' 1 ); // === 'Hat'","   *     inflection.inflect( 'guys', 1 , 'person' ); // === 'person'","   *     inflection.inflect( 'person', 2 ); // === 'people'","   *     inflection.inflect( 'octopus', 2 ); // === 'octopi'","   *     inflection.inflect( 'Hat', 2 ); // === 'Hats'","   *     inflection.inflect( 'person', 2, null, 'guys' ); // === 'guys'","   */","    inflect : function ( str, count, singular, plural ){","      count = parseInt( count, 10 );","","      if( isNaN( count )) return str;","","      if( count === 0 || count > 1 ){","        return inflector._apply_rules( str, plural_rules, uncountable_words, plural );","      }else{","        return inflector._apply_rules( str, singular_rules, uncountable_words, singular );","      }","    },","","","","  /**","   * This function adds camelization support to every String object.","   * @public","   * @function","   * @param {String} str The subject string.","   * @param {Boolean} low_first_letter Default is to capitalize the first letter of the results.(optional)","   *                                 Passing true will lowercase it.","   * @returns {String} Lower case underscored words will be returned in camel case.","   *                  additionally '/' is translated to '::'","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.camelize( 'message_properties' ); // === 'MessageProperties'","   *     inflection.camelize( 'message_properties', true ); // === 'messageProperties'","   */","    camelize : function ( str, low_first_letter ){","      var str_path = str.split( '/' );","      var i        = 0;","      var j        = str_path.length;","      var str_arr, init_x, k, l, first;","","      for( ; i < j; i++ ){","        str_arr = str_path[ i ].split( '_' );","        k       = 0;","        l       = str_arr.length;","","        for( ; k < l; k++ ){","          if( k !== 0 ){","            str_arr[ k ] = str_arr[ k ].toLowerCase();","          }","","          first = str_arr[ k ].charAt( 0 );","          first = low_first_letter && i === 0 && k === 0","            ? first.toLowerCase() : first.toUpperCase();","          str_arr[ k ] = first + str_arr[ k ].substring( 1 );","        }","","        str_path[ i ] = str_arr.join( '' );","      }","","      return str_path.join( '::' );","    },","","","","  /**","   * This function adds underscore support to every String object.","   * @public","   * @function","   * @param {String} str The subject string.","   * @param {Boolean} all_upper_case Default is to lowercase and add underscore prefix.(optional)","   *                  Passing true will return as entered.","   * @returns {String} Camel cased words are returned as lower cased and underscored.","   *                  additionally '::' is translated to '/'.","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.underscore( 'MessageProperties' ); // === 'message_properties'","   *     inflection.underscore( 'messageProperties' ); // === 'message_properties'","   *     inflection.underscore( 'MP', true ); // === 'MP'","   */","    underscore : function ( str, all_upper_case ){","      if( all_upper_case && str === str.toUpperCase()) return str;","","      var str_path = str.split( '::' );","      var i        = 0;","      var j        = str_path.length;","","      for( ; i < j; i++ ){","        str_path[ i ] = str_path[ i ].replace( uppercase, '_$1' );","        str_path[ i ] = str_path[ i ].replace( underbar_prefix, '' );","      }","","      return str_path.join( '/' ).toLowerCase();","    },","","","","  /**","   * This function adds humanize support to every String object.","   * @public","   * @function","   * @param {String} str The subject string.","   * @param {Boolean} low_first_letter Default is to capitalize the first letter of the results.(optional)","   *                                 Passing true will lowercase it.","   * @returns {String} Lower case underscored words will be returned in humanized form.","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.humanize( 'message_properties' ); // === 'Message properties'","   *     inflection.humanize( 'message_properties', true ); // === 'message properties'","   */","    humanize : function ( str, low_first_letter ){","      str = str.toLowerCase();","      str = str.replace( id_suffix, '' );","      str = str.replace( underbar, ' ' );","","      if( !low_first_letter ){","        str = inflector.capitalize( str );","      }","","      return str;","    },","","","","  /**","   * This function adds capitalization support to every String object.","   * @public","   * @function","   * @param {String} str The subject string.","   * @returns {String} All characters will be lower case and the first will be upper.","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.capitalize( 'message_properties' ); // === 'Message_properties'","   *     inflection.capitalize( 'message properties', true ); // === 'Message properties'","   */","    capitalize : function ( str ){","      str = str.toLowerCase();","","      return str.substring( 0, 1 ).toUpperCase() + str.substring( 1 );","    },","","","","  /**","   * This function replaces underscores with dashes in the string.","   * @public","   * @function","   * @param {String} str The subject string.","   * @returns {String} Replaces all spaces or underscores with dashes.","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.dasherize( 'message_properties' ); // === 'message-properties'","   *     inflection.dasherize( 'Message Properties' ); // === 'Message-Properties'","   */","    dasherize : function ( str ){","      return str.replace( space_or_underbar, '-' );","    },","","","","  /**","   * This function adds titleize support to every String object.","   * @public","   * @function","   * @param {String} str The subject string.","   * @returns {String} Capitalizes words as you would for a book title.","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.titleize( 'message_properties' ); // === 'Message Properties'","   *     inflection.titleize( 'message properties to keep' ); // === 'Message Properties to Keep'","   */","    titleize : function ( str ){","      str         = str.toLowerCase().replace( underbar, ' ' );","      var str_arr = str.split( ' ' );","      var i       = 0;","      var j       = str_arr.length;","      var d, k, l;","","      for( ; i < j; i++ ){","        d = str_arr[ i ].split( '-' );","        k = 0;","        l = d.length;","","        for( ; k < l; k++){","          if( inflector.indexOf( non_titlecased_words, d[ k ].toLowerCase()) < 0 ){","            d[ k ] = inflector.capitalize( d[ k ]);","          }","        }","","        str_arr[ i ] = d.join( '-' );","      }","","      str = str_arr.join( ' ' );","      str = str.substring( 0, 1 ).toUpperCase() + str.substring( 1 );","","      return str;","    },","","","","  /**","   * This function adds demodulize support to every String object.","   * @public","   * @function","   * @param {String} str The subject string.","   * @returns {String} Removes module names leaving only class names.(Ruby style)","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.demodulize( 'Message::Bus::Properties' ); // === 'Properties'","   */","    demodulize : function ( str ){","      var str_arr = str.split( '::' );","","      return str_arr[ str_arr.length - 1 ];","    },","","","","  /**","   * This function adds tableize support to every String object.","   * @public","   * @function","   * @param {String} str The subject string.","   * @returns {String} Return camel cased words into their underscored plural form.","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.tableize( 'MessageBusProperty' ); // === 'message_bus_properties'","   */","    tableize : function ( str ){","      str = inflector.underscore( str );","      str = inflector.pluralize( str );","","      return str;","    },","","","","  /**","   * This function adds classification support to every String object.","   * @public","   * @function","   * @param {String} str The subject string.","   * @returns {String} Underscored plural nouns become the camel cased singular form.","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.classify( 'message_bus_properties' ); // === 'MessageBusProperty'","   */","    classify : function ( str ){","      str = inflector.camelize( str );","      str = inflector.singularize( str );","","      return str;","    },","","","","  /**","   * This function adds foreign key support to every String object.","   * @public","   * @function","   * @param {String} str The subject string.","   * @param {Boolean} drop_id_ubar Default is to seperate id with an underbar at the end of the class name,","                                 you can pass true to skip it.(optional)","   * @returns {String} Underscored plural nouns become the camel cased singular form.","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.foreign_key( 'MessageBusProperty' ); // === 'message_bus_property_id'","   *     inflection.foreign_key( 'MessageBusProperty', true ); // === 'message_bus_propertyid'","   */","    foreign_key : function ( str, drop_id_ubar ){","      str = inflector.demodulize( str );","      str = inflector.underscore( str ) + (( drop_id_ubar ) ? ( '' ) : ( '_' )) + 'id';","","      return str;","    },","","","","  /**","   * This function adds ordinalize support to every String object.","   * @public","   * @function","   * @param {String} str The subject string.","   * @returns {String} Return all found numbers their sequence like '22nd'.","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.ordinalize( 'the 1 pitch' ); // === 'the 1st pitch'","   */","    ordinalize : function ( str ){","      var str_arr = str.split( ' ' );","      var i       = 0;","      var j       = str_arr.length;","","      for( ; i < j; i++ ){","        var k = parseInt( str_arr[ i ], 10 );","","        if( !isNaN( k )){","          var ltd = str_arr[ i ].substring( str_arr[ i ].length - 2 );","          var ld  = str_arr[ i ].substring( str_arr[ i ].length - 1 );","          var suf = 'th';","","          if( ltd != '11' && ltd != '12' && ltd != '13' ){","            if( ld === '1' ){","              suf = 'st';","            }else if( ld === '2' ){","              suf = 'nd';","            }else if( ld === '3' ){","              suf = 'rd';","            }","          }","","          str_arr[ i ] += suf;","        }","      }","","      return str_arr.join( ' ' );","    },","","  /**","   * This function performs multiple inflection methods on a string","   * @public","   * @function","   * @param {String} str The subject string.","   * @param {Array} arr An array of inflection methods.","   * @returns {String}","   * @example","   *","   *     var inflection = require( 'inflection' );","   *","   *     inflection.transform( 'all job', [ 'pluralize', 'capitalize', 'dasherize' ]); // === 'All-jobs'","   */","    transform : function ( str, arr ){","      var i = 0;","      var j = arr.length;","","      for( ;i < j; i++ ){","        var method = arr[ i ];","","        if( inflector.hasOwnProperty( method )){","          str = inflector[ method ]( str );","        }","      }","","      return str;","    }","  };","","/**"," * @public"," */","  inflector.version = '1.12.0';","","  return inflector;","}));",""],"l":{"10":1,"11":1,"12":0,"13":1,"14":1,"16":0,"25":1,"349":1,"419":1,"489":1,"560":1,"569":1,"570":1,"571":1,"572":1,"573":1,"575":1,"591":0,"592":0,"594":0,"596":0,"597":0,"598":0,"600":0,"601":0,"602":0,"603":0,"605":0,"611":0,"633":0,"634":0,"637":0,"638":0,"639":0,"641":0,"642":0,"643":0,"644":0,"648":0,"670":0,"692":0,"719":0,"721":0,"723":0,"724":0,"726":0,"749":0,"750":0,"751":0,"752":0,"754":0,"755":0,"756":0,"757":0,"759":0,"760":0,"761":0,"764":0,"765":0,"767":0,"770":0,"773":0,"796":0,"798":0,"799":0,"800":0,"802":0,"803":0,"804":0,"807":0,"828":0,"829":0,"830":0,"832":0,"833":0,"836":0,"855":0,"857":0,"876":0,"895":0,"896":0,"897":0,"898":0,"899":0,"901":0,"902":0,"903":0,"904":0,"906":0,"907":0,"908":0,"912":0,"915":0,"916":0,"918":0,"936":0,"938":0,"956":0,"957":0,"959":0,"977":0,"978":0,"980":0,"1001":0,"1002":0,"1004":0,"1022":0,"1023":0,"1024":0,"1026":0,"1027":0,"1029":0,"1030":0,"1031":0,"1032":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1044":0,"1048":0,"1065":0,"1066":0,"1068":0,"1069":0,"1071":0,"1072":0,"1076":0,"1083":1,"1085":1}}}